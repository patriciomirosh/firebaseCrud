{"version":3,"sources":["firebase.js","components/Linkform.js","components/Links.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","LinksForm","props","initialStateValues","url","name","description","useState","values","setValues","handleInputChange","e","target","value","getLinkById","id","a","collection","doc","get","data","useEffect","currentId","onSubmit","preventDefault","str","RegExp","test","toast","type","autoClose","addOrEditLink","className","placeholder","onChange","rows","Links","links","setLinks","setCurrentId","getLinks","onSnapshot","querySnapshot","docs","forEach","push","onDeleteLink","window","confirm","delete","linkObject","set","update","console","error","map","link","onClick","href","rel","App","Linkform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7cccf23.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n// Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyCvCRBZVfatQBdSzkbxnx-E1Ib7DSUxMmw\",\r\n    authDomain: \"firestore1-76d6c.firebaseapp.com\",\r\n    projectId: \"firestore1-76d6c\",\r\n    storageBucket: \"firestore1-76d6c.appspot.com\",\r\n    messagingSenderId: \"1070283142312\",\r\n    appId: \"1:1070283142312:web:701f58501df2eacc37fe9d\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export const  db = fb.firestore()\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst LinksForm = (props) => {\r\n  const initialStateValues = {\r\n    url: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const [values, setValues] = useState(initialStateValues);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const validURL = (str) => {\r\n    var pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return !!pattern.test(str);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validURL(values.url)) {\r\n      return toast(\"invalid url\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n\r\n    props.addOrEditLink(values);\r\n    setValues({ ...initialStateValues });\r\n  };\r\n\r\n  const getLinkById = async (id) => {\r\n    const doc = await db.collection(\"links\").doc(id).get();\r\n    setValues({ ...doc.data() });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId === \"\") {\r\n      setValues({ ...initialStateValues });\r\n    } else {\r\n      getLinkById(props.currentId);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"card card-body border-primary\">\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">insert_link</i>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"https://someurl.xyz\"\r\n          value={values.url}\r\n          name=\"url\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-text bg-light\">\r\n          <i className=\"material-icons\">create</i>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={values.name}\r\n          name=\"name\"\r\n          placeholder=\"Website Name\"\r\n          className=\"form-control\"\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          rows=\"3\"\r\n          className=\"form-control\"\r\n          placeholder=\"Write a Description\"\r\n          name=\"description\"\r\n          value={values.description}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <button className=\"btn btn-primary btn-block\">\r\n        {props.currentId === \"\" ? \"Save\" : \"Update\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default LinksForm;","import React, { useEffect, useState } from \"react\";\r\nimport LinksForm from \"./Linkform\";\r\n\r\nimport { db } from \"../firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Links = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const [currentId, setCurrentId] = useState(\"\");\r\n\r\n  const getLinks = async () => {\r\n    db.collection(\"links\").onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        docs.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setLinks(docs);\r\n    });\r\n  };\r\n\r\n  const onDeleteLink = async (id) => {\r\n    if (window.confirm(\"are you sure you want to delete this link?\")) {\r\n      await db.collection(\"links\").doc(id).delete();\r\n      toast(\"Link Removed Successfully\", {\r\n        type: \"error\",\r\n        autoClose: 2000\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLinks();\r\n  }, []);\r\n\r\n  const addOrEditLink = async (linkObject) => {\r\n    try {\r\n      if (currentId === \"\") {\r\n        await db.collection(\"links\").doc().set(linkObject);\r\n        toast(\"New Link Added\", {\r\n          type: \"success\",\r\n        });\r\n      } else {\r\n        await db.collection(\"links\").doc(currentId).update(linkObject);\r\n        toast(\"Link Updated Successfully\", {\r\n          type: \"info\",\r\n        });\r\n        setCurrentId(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-md-4 p-2\">\r\n        <LinksForm {...{ addOrEditLink, currentId, links }} />\r\n      </div>\r\n      <div className=\"col-md-8 p-2\">\r\n        {links.map((link) => (\r\n          <div className=\"card mb-1\" key={link.id}>\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h4>{link.name}</h4>\r\n                <div>\r\n                  <i\r\n                    className=\"material-icons text-danger\"\r\n                    onClick={() => onDeleteLink(link.id)}\r\n                  >\r\n                    close\r\n                  </i>\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => setCurrentId(link.id)}\r\n                  >\r\n                    create\r\n                  </i>\r\n                </div>\r\n              </div>\r\n              <p>{link.description}</p>\r\n              <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">Go to Website</a>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Links;","import './App.css';\nimport Linkform from './components/Linkform'\nimport Links from './components/Links'\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction App() {\n  return (\n   <div className=\"container p-4\">\n   <div className=\"row\">\n    <Linkform></Linkform>\n    <Links/>\n    \n    </div>\n    <ToastContainer />\n    </div >\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './firebase'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}